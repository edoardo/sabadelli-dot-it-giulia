[%-
    USE date;

    MACRO date2iso8601(epoch) GET date.format(epoch, '%F');
    MACRO date2path(epoch) GET date.format(epoch, '%Y/%m/%d');
    MACRO date2stamp(epoch) GET date.format(epoch, '%Y.%m.%d');

    countries = {
        af => 'Afghanistan',
        ax => 'Aland Islands',
        al => 'Albania',
        dz => 'Algeria',
        as => 'American Samoa',
        ad => 'Andorra',
        ao => 'Angola',
        ai => 'Anguilla',
        aq => 'Antarctica',
        ag => 'Antigua and Barbuda',
        ar => 'Argentina',
        am => 'Armenia',
        aw => 'Aruba',
        au => 'Australia',
        at => 'Austria',
        az => 'Azerbaijan',
        bs => 'Bahamas',
        bh => 'Bahrain',
        bd => 'Bangladesh',
        bb => 'Barbados',
        by => 'Belarus',
        be => 'Belgium',
        bz => 'Belize',
        bj => 'Benin',
        bm => 'Bermuda',
        bt => 'Bhutan',
        bo => 'Bolivia',
        ba => 'Bosnia and Herzegovina',
        bw => 'Botswana',
        bv => 'Bouvet Island',
        br => 'Brazil',
        io => 'British Indian Ocean Territory',
        bn => 'Brunei',
        bg => 'Bulgaria',
        bf => 'Burkina Faso',
        bi => 'Burundi',
        kh => 'Cambodia',
        cm => 'Cameroon',
        ca => 'Canada',
        cv => 'Cape Verde',
        ky => 'Cayman Islands',
        cf => 'Central African Republic',
        td => 'Chad',
        cl => 'Chile',
        cn => 'China',
        cx => 'Christmas Island',
        cc => 'Cocos (Keeling) Islands',
        co => 'Colombia',
        km => 'Comoros',
        cg => 'Congo',
        cd => 'Congo, The Democratic Republic of the',
        ck => 'Cook Islands',
        cr => 'Costa Rica',
        ci => "Cote D'Ivoire",
        hr => 'Croatia',
        cu => 'Cuba',
        cy => 'Cyprus',
        cz => 'Czech Republic',
        dk => 'Denmark',
        dj => 'Djibouti',
        dm => 'Dominica',
        do => 'Dominican Republic',
        ec => 'Ecuador',
        eg => 'Egypt',
        sv => 'El Salvador',
        gq => 'Equatorial Guinea',
        er => 'Eritrea',
        ee => 'Estonia',
        et => 'Ethiopia',
        fk => 'Falkland Islands (Malvinas)',
        fo => 'Faroe Islands',
        fj => 'Fiji',
        fi => 'Finland',
        fr => 'France',
        gf => 'French Guiana',
        pf => 'French Polynesia',
        tf => 'French Southern Territories',
        ga => 'Gabon',
        gm => 'Gambia',
        ge => 'Georgia',
        de => 'Germany',
        gh => 'Ghana',
        gi => 'Gibraltar',
        gr => 'Greece',
        gl => 'Greenland',
        gd => 'Grenada',
        gp => 'Guadeloupe',
        gu => 'Guam',
        gt => 'Guatemala',
        gg => 'Guernsey',
        gn => 'Guinea',
        gw => 'Guinea-Bissau',
        gy => 'Guyana',
        ht => 'Haiti',
        hm => 'Heard Island and McDonald Islands',
        hn => 'Honduras',
        hk => 'Hong Kong',
        hu => 'Hungary',
        is => 'Iceland',
        in => 'India',
        id => 'Indonesia',
        ir => 'Iran',
        iq => 'Iraq',
        ie => 'Ireland',
        im => 'Isle of Man',
        il => 'Israel',
        it => 'Italy',
        jm => 'Jamaica',
        jp => 'Japan',
        je => 'Jersey',
        jo => 'Jordan',
        kz => 'Kazakhstan',
        ke => 'Kenya',
        ki => 'Kiribati',
        kw => 'Kuwait',
        kg => 'Kyrgyzstan',
        la => 'Laos',
        lv => 'Latvia',
        lb => 'Lebanon',
        ls => 'Lesotho',
        lr => 'Liberia',
        ly => 'Libya',
        li => 'Liechtenstein',
        lt => 'Lithuania',
        lu => 'Luxembourg',
        mo => 'Macao',
        mk => 'Macedonia',
        mg => 'Madagascar',
        mw => 'Malawi',
        my => 'Malaysia',
        mv => 'Maldives',
        ml => 'Mali',
        mt => 'Malta',
        mh => 'Marshall Islands',
        mq => 'Martinique',
        mr => 'Mauritania',
        mu => 'Mauritius',
        yt => 'Mayotte',
        mx => 'Mexico',
        fm => 'Micronesia, Federated States of',
        md => 'Moldova',
        mc => 'Monaco',
        mn => 'Mongolia',
        me => 'Montenegro',
        ms => 'Montserrat',
        ma => 'Morocco',
        mz => 'Mozambique',
        mm => 'Myanmar',
        na => 'Namibia',
        nr => 'Nauru',
        np => 'Nepal',
        nl => 'Netherlands',
        an => 'Netherlands Antilles',
        nc => 'New Caledonia',
        nz => 'New Zealand',
        ni => 'Nicaragua',
        ne => 'Niger',
        ng => 'Nigeria',
        nu => 'Niue',
        nf => 'Norfolk Island',
        kp => 'North Korea',
        mp => 'Northern Mariana Islands',
        no => 'Norway',
        om => 'Oman',
        pk => 'Pakistan',
        pw => 'Palau',
        ps => 'Palestinian Territory, Occupied',
        pa => 'Panama',
        pg => 'Papua New Guinea',
        py => 'Paraguay',
        pe => 'Peru',
        ph => 'Philippines',
        pn => 'Pitcairn',
        pl => 'Poland',
        pt => 'Portugal',
        pr => 'Puerto Rico',
        qa => 'Qatar',
        re => 'Reunion',
        ro => 'Romania',
        ru => 'Russia',
        rw => 'Rwanda',
        sh => 'Saint Helena',
        kn => 'Saint Kitts and Nevis',
        lc => 'Saint Lucia',
        pm => 'Saint Pierre and Miquelon',
        vc => 'Saint Vincent and the Grenadines',
        bl => 'Saint-BarthÃ©lemy',
        mf => 'Saint-Martin (French part)',
        ws => 'Samoa',
        sm => 'San Marino',
        st => 'Sao Tome and Principe',
        sa => 'Saudi Arabia',
        sn => 'Senegal',
        rs => 'Serbia',
        sc => 'Seychelles',
        sl => 'Sierra Leone',
        sg => 'Singapore',
        sk => 'Slovakia',
        si => 'Slovenia',
        sb => 'Solomon Islands',
        so => 'Somalia',
        za => 'South Africa',
        gs => 'South Georgia and the South Sandwich Islands',
        kr => 'South Korea',
        es => 'Spain',
        lk => 'Sri Lanka',
        sd => 'Sudan',
        sr => 'Suriname',
        sj => 'Svalbard and Jan Mayen',
        sz => 'Swaziland',
        se => 'Sweden',
        ch => 'Switzerland',
        sy => 'Syria',
        tw => 'Taiwan',
        tj => 'Tajikistan',
        tz => 'Tanzania',
        th => 'Thailand',
        tl => 'Timor-Leste',
        tg => 'Togo',
        tk => 'Tokelau',
        to => 'Tonga',
        tt => 'Trinidad and Tobago',
        tn => 'Tunisia',
        tr => 'Turkey',
        tm => 'Turkmenistan',
        tc => 'Turks and Caicos Islands',
        tv => 'Tuvalu',
        ug => 'Uganda',
        ua => 'Ukraine',
        ae => 'United Arab Emirates',
        gb => 'United Kingdom',
        us => 'United States',
        um => 'United States Minor Outlying Islands',
        uy => 'Uruguay',
        uz => 'Uzbekistan',
        vu => 'Vanuatu',
        va => 'Vatican City State',
        ve => 'Venezuela',
        vn => 'Vietnam',
        vg => 'Virgin Islands, British',
        vi => 'Virgin Islands, U.S.',
        wf => 'Wallis and Futuna',
        eh => 'Western Sahara',
        ye => 'Yemen',
        zm => 'Zambia',
        zw => 'Zimbabwe',
        www => 'Around the world'
    }
-%]
<!DOCTYPE html>
<html>

  <head>
    <meta charset="utf-8" />

    <title>[% h.l('Postcards from Giulia') %] - [% postcard.title %]</title>
    <!--[if lt IE 9]>
        <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <link rel="alternate" type="application/atom+xml" title="[% h.l('Postcards from Giulia') %] Atom feed" href="http://sabadelli.it/giulia/feed" />

    <link rel="stylesheet" type="text/css" media="all" href="[% env.static_host %]/giulia/css/fonts.css" />
    <link rel="stylesheet" type="text/css" media="all" href="[% env.static_host %]/giulia/css/less4.css" />

    <meta name="robots" content="noindex, nofollow" />

    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <!-- Adding "maximum-scale=1" fixes the Mobile Safari auto-zoom bug: http://filamentgroup.com/examples/iosScaleBug/ -->

    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="[% postcard.title %]" />
    <meta property="og:site_name" content="Postcards from Giulia" />
    <meta property="og:url" content="http://sabadelli.it/giulia/[% postcard.permalink %]" />
    <meta property="og:image" content="[% postcard.media.url %]" />
    <meta property="og:description" content="Giulia sent a postcard to [% postcard.recipients %]" />

    <script type="text/javascript" src="[% env.static_host %]/giulia/js/jquery-min.js"></script>
    <script type="text/javascript">
      $(function () {
        $('#back').hide();
        $('#front, #back').on('click', function (e) {
            $(this).hide();
            $(this.id === 'front' ? '#back' : '#front').show();
        });
      });
    </script>

    [%- IF app.mode == 'production' %]
    <!-- Google Analytics code -->
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-323903-10']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>
    [% END -%]
  </head>
  
  <body lang="[% app.lang || 'en' %]">
    <div>
      <header>
        <a href="/giulia"><h1>[% h.l('postcards from Giulia') %]</h1></a>
      </header>

      <div id="container">
        [%- IF nav.prev %]
        <a href="/giulia/[% nav.prev %]" class="nav prev" title="[% h.l('previous') %]">[% h.l('previous') %]</a>
        [%- END %]

        <div id="postcard" lang="[% postcard.lang %]" title="[% h.l('click to flip') %]">
          <div id="front">
            [%- IF postcard.media.type == 'photo' %]
            <img src="[% postcard.media.url %]" alt="[% h.l('postcard front image') %]" width="800" height="530" />
            [%- END %]
          </div>

          <div id="back">
            <article>
              <section class="left">
                <a href="/giulia/[% date2path(postcard.pubdate) %]/[% postcard.seo %]"><h1>[% postcard.title %]</h1></a>
                <time datetime="[% date2iso8601(postcard.pubdate) %]" class="[% postcard.from_country %]">[% date2stamp(postcard.pubdate,) %]</time>
                [% postcard.content -%]
              </section>

              <section class="right">
                <img class="stamp" src="[% env.static_host %]/giulia/css/media/stamp-[% postcard.from_country %]-1.png" alt="[% h.l('stamp') %]" width="134" height="134" />
                <p>[% postcard.recipients %]</p>
                <p class="bigger">[% countries.${postcard.to_country} %]</p>
              </section>

              <footer>
                <small>&copy; copyright <a href="http://sabadelli.it/edoardo">Edoardo Sabadelli</a></small>
              </footer>
            </article>
          </div>
        </div>

        [%- IF nav.next %]
        <a href="/giulia/[% nav.next %]" class="nav next" title="[% h.l('next') %]">[% h.l('next') %]</a>
        [%- END %]
      </div>

    </div>
  </body>
  
</html>
